mage: ubuntu:focal

pipelines:
  default:
    - step:
        name: 'Check in'
        script:
          - pwd
          - ls
          - apt update
          - export DEBIAN_FRONTEND=noninteractive
          - apt -y install git
          - git branch
          - mkdir src
          - cd src
          - git clone git@bitbucket.org:traclabs/fsw_ros2_bridge.git
          - ls fsw_ros2_bridge
          - git clone git@bitbucket.org:traclabs/cfs_groundsystem_bridge_plugin.git
          - ls cfs_groundsystem_bridge_plugin
          - git clone git@bitbucket.org:traclabs/cfe_ros2_bridge_plugin.git
          - ls cfe_ros2_bridge_plugin
          - git clone git@bitbucket.org:traclabs/rqt_fsw_bridge.git
          - ls rqt_fsw_bridge
        artifacts:
          - src/**
    - step:
        name: 'Check persistence'
        script:
          - ls
          - ls src
    - step:
        name: 'Install ROS2'
        script:
          - apt update
          - export DEBIAN_FRONTEND=noninteractive
          - apt -y install git
          - locale
          - apt update
          - apt -y install locales
          - locale-gen en_US en_US.UTF-8
          - update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
          - export LANG=en_US.UTF-8
          - locale
          - apt update
          - apt -y install curl gnupg lsb-release
          - curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null
          - more /etc/apt/sources.list.d/ros2.list
          - apt update
          - apt -y upgrade
          - apt -y install ros-galactic-desktop python3-rosdep python3-wstool
          - source /opt/ros/galactic/setup.bash
        artifacts:
          - /opt/ros/**
    - step:
        name: 'Build Workspace'
        script:
          - apt update
          - export DEBIAN_FRONTEND=noninteractive
          - rosdep init
          - rosdep update
          - apt -y install pip
          - pip install clint
          - ./install.py
          - apt -y install python3-colcon* 
          - rosdep install --from-paths src -y --ignore-src
          - colcon build
          - . install/local_setup.bash
        artifacts:
          - src/**
          - build/**
          - install/**
          - log/**
    - step:
        name: 'Test Workspace'
        script: 
          - colcon test  --event-handlers console_cohesion+ --ctest-args " -VVV"
          
